// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filestorage.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FileData struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileData) Reset()         { *m = FileData{} }
func (m *FileData) String() string { return proto.CompactTextString(m) }
func (*FileData) ProtoMessage()    {}
func (*FileData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1da47343321951, []int{0}
}

func (m *FileData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileData.Unmarshal(m, b)
}
func (m *FileData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileData.Marshal(b, m, deterministic)
}
func (m *FileData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileData.Merge(m, src)
}
func (m *FileData) XXX_Size() int {
	return xxx_messageInfo_FileData.Size(m)
}
func (m *FileData) XXX_DiscardUnknown() {
	xxx_messageInfo_FileData.DiscardUnknown(m)
}

var xxx_messageInfo_FileData proto.InternalMessageInfo

func (m *FileData) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type UploadResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadResponse) Reset()         { *m = UploadResponse{} }
func (m *UploadResponse) String() string { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()    {}
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1da47343321951, []int{1}
}

func (m *UploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadResponse.Unmarshal(m, b)
}
func (m *UploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadResponse.Marshal(b, m, deterministic)
}
func (m *UploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadResponse.Merge(m, src)
}
func (m *UploadResponse) XXX_Size() int {
	return xxx_messageInfo_UploadResponse.Size(m)
}
func (m *UploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadResponse proto.InternalMessageInfo

func (m *UploadResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DownloadRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadRequest) Reset()         { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()    {}
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1da47343321951, []int{2}
}

func (m *DownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequest.Unmarshal(m, b)
}
func (m *DownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequest.Marshal(b, m, deterministic)
}
func (m *DownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequest.Merge(m, src)
}
func (m *DownloadRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadRequest.Size(m)
}
func (m *DownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequest proto.InternalMessageInfo

func (m *DownloadRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1da47343321951, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type FileList struct {
	Files                []*FileInfo `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FileList) Reset()         { *m = FileList{} }
func (m *FileList) String() string { return proto.CompactTextString(m) }
func (*FileList) ProtoMessage()    {}
func (*FileList) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1da47343321951, []int{4}
}

func (m *FileList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileList.Unmarshal(m, b)
}
func (m *FileList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileList.Marshal(b, m, deterministic)
}
func (m *FileList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileList.Merge(m, src)
}
func (m *FileList) XXX_Size() int {
	return xxx_messageInfo_FileList.Size(m)
}
func (m *FileList) XXX_DiscardUnknown() {
	xxx_messageInfo_FileList.DiscardUnknown(m)
}

var xxx_messageInfo_FileList proto.InternalMessageInfo

func (m *FileList) GetFiles() []*FileInfo {
	if m != nil {
		return m.Files
	}
	return nil
}

type FileInfo struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FileInfo) Reset()         { *m = FileInfo{} }
func (m *FileInfo) String() string { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()    {}
func (*FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1da47343321951, []int{5}
}

func (m *FileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfo.Unmarshal(m, b)
}
func (m *FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfo.Marshal(b, m, deterministic)
}
func (m *FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfo.Merge(m, src)
}
func (m *FileInfo) XXX_Size() int {
	return xxx_messageInfo_FileInfo.Size(m)
}
func (m *FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfo proto.InternalMessageInfo

func (m *FileInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileInfo) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *FileInfo) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*FileData)(nil), "fileserver.v1.FileData")
	proto.RegisterType((*UploadResponse)(nil), "fileserver.v1.UploadResponse")
	proto.RegisterType((*DownloadRequest)(nil), "fileserver.v1.DownloadRequest")
	proto.RegisterType((*ListRequest)(nil), "fileserver.v1.ListRequest")
	proto.RegisterType((*FileList)(nil), "fileserver.v1.FileList")
	proto.RegisterType((*FileInfo)(nil), "fileserver.v1.FileInfo")
}

func init() {
	proto.RegisterFile("filestorage.proto", fileDescriptor_2f1da47343321951)
}

var fileDescriptor_2f1da47343321951 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4a, 0xf3, 0x40,
	0x10, 0xc7, 0xd9, 0xaf, 0x5f, 0xd5, 0x4e, 0x5b, 0xc5, 0x45, 0xb0, 0x04, 0xd4, 0x10, 0x14, 0x72,
	0x71, 0xab, 0xf5, 0xd4, 0x8b, 0x50, 0x29, 0x85, 0x82, 0xa7, 0xa8, 0x17, 0x2f, 0xb2, 0x6d, 0xa7,
	0x35, 0x98, 0x66, 0x63, 0x32, 0xa9, 0x2f, 0xe2, 0xf3, 0xf9, 0x2c, 0xb2, 0xbb, 0x09, 0xd8, 0x10,
	0xf1, 0x96, 0xcc, 0xfc, 0xfe, 0x3b, 0x3b, 0xbf, 0x85, 0xc3, 0x65, 0x18, 0x61, 0x46, 0x2a, 0x95,
	0x2b, 0x14, 0x49, 0xaa, 0x48, 0xf1, 0xae, 0x29, 0x61, 0xba, 0xc1, 0x54, 0x6c, 0xae, 0x9d, 0xb3,
	0x95, 0x52, 0xab, 0x08, 0xfb, 0xa6, 0x39, 0xcb, 0x97, 0x7d, 0x0a, 0xd7, 0x98, 0x91, 0x5c, 0x27,
	0x96, 0xf7, 0x5c, 0xd8, 0x9b, 0x84, 0x11, 0x8e, 0x25, 0x49, 0x7e, 0x04, 0xcd, 0xf9, 0x6b, 0x1e,
	0xbf, 0xf5, 0x98, 0xcb, 0xfc, 0x4e, 0x60, 0x7f, 0xbc, 0x73, 0xd8, 0x7f, 0x4a, 0x22, 0x25, 0x17,
	0x01, 0x66, 0x89, 0x8a, 0x33, 0xe4, 0x1c, 0xfe, 0xc7, 0x72, 0x8d, 0x06, 0x6b, 0x05, 0xe6, 0xdb,
	0xbb, 0x80, 0x83, 0xb1, 0xfa, 0x88, 0x2d, 0xf7, 0x9e, 0x63, 0x46, 0xb5, 0x58, 0x17, 0xda, 0xf7,
	0x61, 0x46, 0x05, 0xe2, 0x0d, 0xed, 0x74, 0x5d, 0xe2, 0x97, 0xd0, 0x34, 0x77, 0xef, 0x31, 0xb7,
	0xe1, 0xb7, 0x07, 0xc7, 0x62, 0x6b, 0x13, 0xa1, 0xb9, 0x69, 0xbc, 0x54, 0x81, 0xa5, 0xbc, 0x4f,
	0x66, 0xb3, 0xba, 0x56, 0x37, 0x8a, 0x0f, 0x01, 0xe6, 0x29, 0x4a, 0xc2, 0xc5, 0x8b, 0xa4, 0xde,
	0x3f, 0x97, 0xf9, 0xed, 0x81, 0x23, 0xac, 0x0f, 0x51, 0xfa, 0x10, 0x8f, 0xa5, 0x8f, 0xa0, 0x55,
	0xd0, 0x23, 0xd2, 0xd1, 0x3c, 0x59, 0x94, 0xd1, 0xc6, 0xdf, 0xd1, 0x82, 0x1e, 0xd1, 0xe0, 0x8b,
	0x41, 0x4b, 0x5f, 0xeb, 0x81, 0x54, 0x8a, 0x7c, 0x02, 0x60, 0xdd, 0xe9, 0x12, 0xaf, 0x5b, 0x49,
	0x8b, 0x77, 0x4e, 0x2a, 0x8d, 0x6d, 0xdf, 0x3e, 0xe3, 0x53, 0xe8, 0x94, 0x76, 0xcd, 0x49, 0xa7,
	0x95, 0x40, 0x45, 0xbd, 0xf3, 0xdb, 0xa4, 0x2b, 0xc6, 0x6f, 0x61, 0x57, 0xeb, 0x1e, 0x45, 0x11,
	0x77, 0x2a, 0xd4, 0x8f, 0x97, 0xa9, 0x3d, 0x41, 0xf7, 0xef, 0x9a, 0xcf, 0x0d, 0x99, 0x84, 0xb3,
	0x1d, 0xa3, 0xe1, 0xe6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x55, 0x53, 0xcc, 0x83, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileStoreClient is the client API for FileStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileStoreClient interface {
	UploadFile(ctx context.Context, opts ...grpc.CallOption) (FileStore_UploadFileClient, error)
	DownloadFile(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (FileStore_DownloadFileClient, error)
	ListAll(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*FileList, error)
}

type fileStoreClient struct {
	cc grpc.ClientConnInterface
}

func NewFileStoreClient(cc grpc.ClientConnInterface) FileStoreClient {
	return &fileStoreClient{cc}
}

func (c *fileStoreClient) UploadFile(ctx context.Context, opts ...grpc.CallOption) (FileStore_UploadFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileStore_serviceDesc.Streams[0], "/fileserver.v1.FileStore/UploadFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileStoreUploadFileClient{stream}
	return x, nil
}

type FileStore_UploadFileClient interface {
	Send(*FileData) error
	CloseAndRecv() (*UploadResponse, error)
	grpc.ClientStream
}

type fileStoreUploadFileClient struct {
	grpc.ClientStream
}

func (x *fileStoreUploadFileClient) Send(m *FileData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fileStoreUploadFileClient) CloseAndRecv() (*UploadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileStoreClient) DownloadFile(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (FileStore_DownloadFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileStore_serviceDesc.Streams[1], "/fileserver.v1.FileStore/DownloadFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileStoreDownloadFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileStore_DownloadFileClient interface {
	Recv() (*FileData, error)
	grpc.ClientStream
}

type fileStoreDownloadFileClient struct {
	grpc.ClientStream
}

func (x *fileStoreDownloadFileClient) Recv() (*FileData, error) {
	m := new(FileData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileStoreClient) ListAll(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*FileList, error) {
	out := new(FileList)
	err := c.cc.Invoke(ctx, "/fileserver.v1.FileStore/ListAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileStoreServer is the server API for FileStore service.
type FileStoreServer interface {
	UploadFile(FileStore_UploadFileServer) error
	DownloadFile(*DownloadRequest, FileStore_DownloadFileServer) error
	ListAll(context.Context, *ListRequest) (*FileList, error)
}

// UnimplementedFileStoreServer can be embedded to have forward compatible implementations.
type UnimplementedFileStoreServer struct {
}

func (*UnimplementedFileStoreServer) UploadFile(srv FileStore_UploadFileServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadFile not implemented")
}
func (*UnimplementedFileStoreServer) DownloadFile(req *DownloadRequest, srv FileStore_DownloadFileServer) error {
	return status.Errorf(codes.Unimplemented, "method DownloadFile not implemented")
}
func (*UnimplementedFileStoreServer) ListAll(ctx context.Context, req *ListRequest) (*FileList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAll not implemented")
}

func RegisterFileStoreServer(s *grpc.Server, srv FileStoreServer) {
	s.RegisterService(&_FileStore_serviceDesc, srv)
}

func _FileStore_UploadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FileStoreServer).UploadFile(&fileStoreUploadFileServer{stream})
}

type FileStore_UploadFileServer interface {
	SendAndClose(*UploadResponse) error
	Recv() (*FileData, error)
	grpc.ServerStream
}

type fileStoreUploadFileServer struct {
	grpc.ServerStream
}

func (x *fileStoreUploadFileServer) SendAndClose(m *UploadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fileStoreUploadFileServer) Recv() (*FileData, error) {
	m := new(FileData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _FileStore_DownloadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileStoreServer).DownloadFile(m, &fileStoreDownloadFileServer{stream})
}

type FileStore_DownloadFileServer interface {
	Send(*FileData) error
	grpc.ServerStream
}

type fileStoreDownloadFileServer struct {
	grpc.ServerStream
}

func (x *fileStoreDownloadFileServer) Send(m *FileData) error {
	return x.ServerStream.SendMsg(m)
}

func _FileStore_ListAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileStoreServer).ListAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fileserver.v1.FileStore/ListAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileStoreServer).ListAll(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fileserver.v1.FileStore",
	HandlerType: (*FileStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAll",
			Handler:    _FileStore_ListAll_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UploadFile",
			Handler:       _FileStore_UploadFile_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DownloadFile",
			Handler:       _FileStore_DownloadFile_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "filestorage.proto",
}
